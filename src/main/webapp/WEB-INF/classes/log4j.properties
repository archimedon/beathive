#log4j.rootLogger=info, R
#log4j.appender.R=org.apache.log4j.ConsoleAppender
#log4j.appender.R.layout=org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=%-5p %-30.30c{1} %x - %m%n

# Set root logger level to DEBUG for this Application
# appenders stdout and R (fileRolled)
log4j.rootCategory=ERROR, stdout

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=[beathive2] %d %p [%t] %c{1}.%M(%L) | %m%n

#log4j.appender.R=org.apache.log4j.RollingFileAppender

# You can change this to be an absolute path or even an environment variable
# If you're using an environment variable, you will have to set JAVA_OPTS
# to contain this variables - for example in the catalina.sh or catalina.bat
# file

#log4j.appender.R.File=beathive2.log

#log4j.appender.R.MaxFileSize=100KB

# Don't keep a backup file
#log4j.appender.R.MaxBackupIndex=1

#log4j.appender.R.layout=org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n

# Configuration for receiving e-mails when ERROR messages occur.
log4j.appender.mail=org.apache.log4j.net.SMTPAppender
log4j.appender.mail.To=ronniedz@gmail.com
log4j.appender.mail.From=BeatHive <web@BeatHive.com>
log4j.appender.mail.SMTPHost=localhost
log4j.appender.mail.Threshold=ERROR
log4j.appender.mail.BufferSize=1
log4j.appender.mail.Subject=[localhost] beathive2 Application Error

log4j.appender.mail.layout=org.apache.log4j.PatternLayout
log4j.appender.mail.layout.ConversionPattern=%d  %-5p %c %x - %m%n

# If programmed properly the most messages would be at DEBUG
# and the least at FATAL.
log4j.logger.com.beathive.dao.hibernate=INFO
log4j.logger.com.beathive.webapp.taglib=INFO
log4j.logger.com.beathive.webapp.action=DEBUG
log4j.logger.com.beathive.service.commerce.impl=ERROR
log4j.logger.com.beathive.webapp.listener=INFO
#log4j.logger.com.beathive.webapp.filter=DEBUG
log4j.logger.com.beathive.webapp.filter.AuthenticationProcessingLastLoginFilter=DEBUG
log4j.logger.com.beathive.webapp.filter.UserPrefRememberMeFilter=DEBUG
log4j.logger.com.beathive.dao.hibernate.UserDaoHibernate=DEBUG
log4j.logger.com.beathive.dao.hibernate.CartDaoHibernate=DEBUG
log4j.logger.com.beathive.webapp.listener=FATAL
log4j.logger.com.beathive.webapp.listener.UserSessionListener=DEBUG
log4j.logger.com.beathive.util=WARN

# Control logging for other open source packages
log4j.logger.com.ibatis.db=WARN
log4j.logger.com.opensymphony.oscache=ERROR
log4j.logger.net.sf.navigator=ERROR
log4j.logger.net.sf.ehcache=ERROR
log4j.logger.org.acegisecurity=WARN
log4j.logger.org.apache.commons=ERROR
log4j.logger.org.apache.struts=WARN
log4j.logger.org.displaytag=ERROR
log4j.logger.org.springframework=WARN
log4j.logger.org.apache.velocity=WARN
log4j.logger.org.tuckey.web.filters=WARN
log4j.logger.org.directwebremoting.spring=WARN

# Don't show debug logs for WebTest
log4j.logger.com.canoo.webtest=WARN
log4j.logger.com.gargoylesoftware.htmlunit=WARN

# All hibernate log output of "info" level or higher goes to stdout.
# For more verbose logging, change the "info" to "debug" on the last line.
log4j.logger.org.hibernate.ps.PreparedStatementCache=INFO

# Changing the log level to DEBUG will result in Hibernate generated
# SQL to be logged.
#log4j.logger.org.hibernate.SQL=ERROR
log4j.logger.org.hibernate.SQL=ERROR
log4j.logger.org.hibernate=ERROR

# Changing the log level to DEBUG will result in the PreparedStatement
# bound variable values to be logged.
log4j.logger.org.hibernate.type=ERROR




