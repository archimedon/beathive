package com.beathive.service;import java.util.List;import java.util.Map;import com.beathive.model.SoundClip;import com.beathive.model.Store;import com.beathive.service.ServiceException;/** */public interface WebServiceManager {    //~ Methods ================================================================	public boolean isEmailUnique(String email);	/**	 * Check that the address is a valid one	 * @param email	 * @return	 * @throws ServiceException possibly containing a description of the error	 */	public boolean isProperEmailAddress(String email) throws ServiceException; 		/**	 * Runs both isProperEmailAddress && isUserEmailUnique putting 	 * errors, if any, in the returned List	 * @param email	 * @return List of errors	 * @throws ServiceException	 */	public String checkEmail(String email);			/**	 * 	 * @param userId	 * @param days	 * @return	 */	public List getTopTenClips(String userId , Integer days);		/**	 * Checks if username is unique	 * @param username	 * @return true if unique	 */	public boolean isUsernameUnique(String username);		public List getNewestTrackpacks(String userId , Integer fetchSize) throws ServiceException;	/**	/* (non-Javadoc)	 * @see com.beathive.dao.SoundClipDao#getRandomShop()	 */	public Store getRandomShop();	public SoundClip getSoundClip(Long clipId);	/**	 * STUB always NULL	 *  (non-Javadoc)	 * @see com.beathive.dao.SoundClipDao#getTopShop(com.beathive.model.User)	 */	public List getTopShop(String userId);		public String getNumRefPackagedLoops(String storeId, Boolean readystat);		/**	 * 	 * @param storeId	 * @param readystat	 * @return	 */	public String getNumRefPackagedTrackpacks(String storeId, Boolean readystat);	/**	 * Returns a map of the given shops inventory	 * @param storeId	 * @return	 */	public Map<String,String> getProducerInventoryCounts(String storeId);		/**	 * Returns the number of Loops + trackpacks sold	 * @param storeId	 * @param type	 * @return	 */	public String getNumSold(String storeId, String type) ;	}